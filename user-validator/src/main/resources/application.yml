server:
  port: 8080

spring:
  application:
    name: user-validator

  kafka:
    # Propiedades generales de Kafka
    properties:
      schema.registry.url: http://schema-registry:8084
      bootstrap.servers: kafka:29092

    # Consumimos de "user"
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      properties:
        #specific.avro.reader: true
        key.deserializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer
        value.deserializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer

    # Producimos a "user_validated"
    producer:
      properties:
        key.serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
        value.serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer

#  cloud:
#    stream:
#      kafka:
#        binder:
#          auto-create-topics: false
#        streams:
#          binder:
#            configuration:
#              state.dir: /tmp
#              commit.interval.ms: 100
#              topology.optimization: all
#              session.timeout.ms: 10000
#              schema.registry.url: http://schema-registry:8084
#              auto.register.schemas: true
#              default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
#              default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde



logging:
  level:
    ROOT: DEBUG
    io.confluent.kafka: DEBUG
    org.apache.kafka: DEBUG