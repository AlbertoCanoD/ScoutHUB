server:
  port: 8080

# Topic de entrada
topic-in-0: budget

# Topic de salida
topic-out-0: excursion

spring:
  application:
    name: excursion-generator

  cloud:
    # Nombre de la función
    function.definition: aggregateBudgets;

    stream:
      # Configuracion flujo de entrada y salida
      bindings:
        aggregateBudgets-in-0:
          destination: ${topic-in-0}
          consumer:
            concurrency: 1
            useNativeDecoding: true

        aggregateBudgets-out-0:
          destination: ${topic-out-0}
          producer.useNativeEncoding: true

      # Configuración de Kafka
      kafka:
        binder:
          brokers: kafka:29092

      kafka.streams:

        bindings:
          aggregateBudgets-in-0:
            consumer:
              keySerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
              valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
              applicationId: ${spring.application.name}

        binder:
          configuration:
            commit.interval.ms: 100
            session.timeout.ms: 10000
            schema.registry.url: http://schema-registry:8084
            auto.register.schemas: true
            default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde

logging:
  level:
    ROOT: DEBUG
    io.confluent.kafka: DEBUG
    org.apache.kafka: DEBUG