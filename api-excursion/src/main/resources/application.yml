server:
  port: 8080

topic-in-0: excursion

spring:
  application:
    name: api-excursion

  kafka:
    # Propiedades generales de Kafka
    properties:
      schema.registry.url: http://schema-registry:8084
      bootstrap.servers: kafka:29092

  cloud:

    function.definition: process;

    stream:

      bindings:
        process-in-0:
          destination: ${topic-in-0}
          consumer:
            concurrency: 1
            useNativeDecoding: true

      kafka:
        binder:
          brokers: kafka:29092

      kafka.streams:
        bindings:
          process-in-0:
            consumer:
              keySerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
              valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
              applicationId: ${spring.application.name}

        binder:
          configuration:
            commit.interval.ms: 100
            session.timeout.ms: 10000
            schema.registry.url: http://schema-registry:8084
            auto.register.schemas: true
            default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde

  datasource:
    url: jdbc:mysql://api-excursion-db:3306/api-excursion-db
    username: root
    password: root

  jpa:
    hibernate:
      ddl-auto: update

logging:
  level:
    ROOT: DEBUG
    io.confluent.kafka: DEBUG
    org.apache.kafka: DEBUG